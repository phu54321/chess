import loc;
import board;

function movePawn(unitPlayer, unitCellX, unitCellY, currentTurn) {
  const opponentPlayer = (unitPlayer == $P7) ? $P8 : $P7;
  const pawnDy = (unitPlayer == $P7) ? 1 : -1;
  const pawnStartingY = (unitPlayer == $P7) ? 2 : 7;
  const enPassentY = (unitPlayer == $P7) ? 5 : 4;

  // 처음에 2칸
  if (unitCellY == pawnStartingY) {
    if(
      board.getBoard(unitCellX, unitCellY + pawnDy)[[0]] == 0 &&
      board.getBoard(unitCellX, unitCellY + pawnDy * 2)[[0]] == 0
    ) {
      loc.moveCLoc(unitCellX, unitCellY + pawnDy * 2); CreateUnit(1, 'Cursor', 'cLoc', unitPlayer);
    }
  }

  // 한 칸 밑으로 간다
  const promotionY = (unitPlayer == $P7) ? 7 : 2;
  if (1 <= unitCellY + pawnDy && unitCellY + pawnDy <= 8) {
    const cursorUnit = (promotionY == unitCellY) ? $U('Promotion') : $U('Cursor');
    if(board.getBoard(unitCellX, unitCellY + pawnDy)[[0]] == 0) {
      loc.moveCLoc(unitCellX, unitCellY + pawnDy); CreateUnit(1, cursorUnit, 'cLoc', unitPlayer);
    }
    if(unitCellX > 1 && board.getBoard(unitCellX - 1, unitCellY + pawnDy)[[0]] == opponentPlayer) {
      loc.moveCLoc(unitCellX - 1, unitCellY + pawnDy); CreateUnit(1, cursorUnit, 'cLoc', unitPlayer);
    }
    if(unitCellX < 8 && board.getBoard(unitCellX + 1, unitCellY + pawnDy)[[0]] == opponentPlayer) {
      loc.moveCLoc(unitCellX + 1, unitCellY + pawnDy); CreateUnit(1, cursorUnit, 'cLoc', unitPlayer);
    }
  }

  // 앙파상
  if (unitCellY == enPassentY) {
    if (unitCellX > 1) {
      const p, ut, lmt = board.getBoard(unitCellX - 1, unitCellY);
      if (p == opponentPlayer && ut == $U('Pawn') && lmt == currentTurn - 1) {
        loc.moveCLoc(unitCellX - 1, unitCellY + pawnDy); CreateUnit(1, 'EnPassent', 'cLoc', unitPlayer);
      }
    }

    if (unitCellX < 8) {
      const p, ut, lmt = board.getBoard(unitCellX + 1, unitCellY);
      if (p == opponentPlayer && ut == $U('Pawn') && lmt == currentTurn - 1) {
        loc.moveCLoc(unitCellX + 1, unitCellY + pawnDy); CreateUnit(1, 'EnPassent', 'cLoc', unitPlayer);
      }
    }
  }
}
